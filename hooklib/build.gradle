apply plugin: 'com.android.library'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 28

        externalNativeBuild {
            cmake {
                arguments "-DCMAKE_BUILD_TYPE=Debug"
                //arguments "-DCMAKE_BUILD_TYPE=Release"
                arguments '-DBUILD_TESTING=OFF'
                cppFlags "-frtti -fexceptions -Wpointer-arith"
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release{
            debuggable true
            jniDebuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    defaultPublishConfig "debug"
    publishNonDefault  true
    dexOptions {
        preDexLibraries false
        maxProcessCount 8
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
    testOptions {
        unitTests.returnDefaultValues = true
        resultsDir = "${project.buildDir}/ut_results"
    }
    lintOptions {
        checkReleaseBuilds true
        quiet true
        abortOnError false
        ignoreWarnings true
        textOutput "stdout"
        textReport false
//        disable "UnusedResources", 'RestrictedApi',
//        'TypographyFractions','TypographyQuotes'

        // turn off checking the given issue id's
        disable 'TypographyFractions', 'TypographyQuotes'
        // turn on the given issue id's
        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
        // check *only* the given issue id's
        check 'NewApi', 'InlinedApi'

    }
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
    options.encoding = "UTF-8"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(':annotation')
}
